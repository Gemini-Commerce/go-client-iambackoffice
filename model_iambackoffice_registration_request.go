/*
IamBackoffice Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iambackoffice

import (
	"encoding/json"
)

// checks if the IambackofficeRegistrationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IambackofficeRegistrationRequest{}

// IambackofficeRegistrationRequest struct for IambackofficeRegistrationRequest
type IambackofficeRegistrationRequest struct {
	Registration *IambackofficeUserRegistration `json:"registration,omitempty"`
	SendSetPasswordEmail *bool `json:"sendSetPasswordEmail,omitempty"`
	SkipRegistrationVerification *bool `json:"skipRegistrationVerification,omitempty"`
	SkipVerification *bool `json:"skipVerification,omitempty"`
	User *IambackofficeUser `json:"user,omitempty"`
	TenantId *string `json:"tenantId,omitempty"`
}

// NewIambackofficeRegistrationRequest instantiates a new IambackofficeRegistrationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIambackofficeRegistrationRequest() *IambackofficeRegistrationRequest {
	this := IambackofficeRegistrationRequest{}
	return &this
}

// NewIambackofficeRegistrationRequestWithDefaults instantiates a new IambackofficeRegistrationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIambackofficeRegistrationRequestWithDefaults() *IambackofficeRegistrationRequest {
	this := IambackofficeRegistrationRequest{}
	return &this
}

// GetRegistration returns the Registration field value if set, zero value otherwise.
func (o *IambackofficeRegistrationRequest) GetRegistration() IambackofficeUserRegistration {
	if o == nil || IsNil(o.Registration) {
		var ret IambackofficeUserRegistration
		return ret
	}
	return *o.Registration
}

// GetRegistrationOk returns a tuple with the Registration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IambackofficeRegistrationRequest) GetRegistrationOk() (*IambackofficeUserRegistration, bool) {
	if o == nil || IsNil(o.Registration) {
		return nil, false
	}
	return o.Registration, true
}

// HasRegistration returns a boolean if a field has been set.
func (o *IambackofficeRegistrationRequest) HasRegistration() bool {
	if o != nil && !IsNil(o.Registration) {
		return true
	}

	return false
}

// SetRegistration gets a reference to the given IambackofficeUserRegistration and assigns it to the Registration field.
func (o *IambackofficeRegistrationRequest) SetRegistration(v IambackofficeUserRegistration) {
	o.Registration = &v
}

// GetSendSetPasswordEmail returns the SendSetPasswordEmail field value if set, zero value otherwise.
func (o *IambackofficeRegistrationRequest) GetSendSetPasswordEmail() bool {
	if o == nil || IsNil(o.SendSetPasswordEmail) {
		var ret bool
		return ret
	}
	return *o.SendSetPasswordEmail
}

// GetSendSetPasswordEmailOk returns a tuple with the SendSetPasswordEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IambackofficeRegistrationRequest) GetSendSetPasswordEmailOk() (*bool, bool) {
	if o == nil || IsNil(o.SendSetPasswordEmail) {
		return nil, false
	}
	return o.SendSetPasswordEmail, true
}

// HasSendSetPasswordEmail returns a boolean if a field has been set.
func (o *IambackofficeRegistrationRequest) HasSendSetPasswordEmail() bool {
	if o != nil && !IsNil(o.SendSetPasswordEmail) {
		return true
	}

	return false
}

// SetSendSetPasswordEmail gets a reference to the given bool and assigns it to the SendSetPasswordEmail field.
func (o *IambackofficeRegistrationRequest) SetSendSetPasswordEmail(v bool) {
	o.SendSetPasswordEmail = &v
}

// GetSkipRegistrationVerification returns the SkipRegistrationVerification field value if set, zero value otherwise.
func (o *IambackofficeRegistrationRequest) GetSkipRegistrationVerification() bool {
	if o == nil || IsNil(o.SkipRegistrationVerification) {
		var ret bool
		return ret
	}
	return *o.SkipRegistrationVerification
}

// GetSkipRegistrationVerificationOk returns a tuple with the SkipRegistrationVerification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IambackofficeRegistrationRequest) GetSkipRegistrationVerificationOk() (*bool, bool) {
	if o == nil || IsNil(o.SkipRegistrationVerification) {
		return nil, false
	}
	return o.SkipRegistrationVerification, true
}

// HasSkipRegistrationVerification returns a boolean if a field has been set.
func (o *IambackofficeRegistrationRequest) HasSkipRegistrationVerification() bool {
	if o != nil && !IsNil(o.SkipRegistrationVerification) {
		return true
	}

	return false
}

// SetSkipRegistrationVerification gets a reference to the given bool and assigns it to the SkipRegistrationVerification field.
func (o *IambackofficeRegistrationRequest) SetSkipRegistrationVerification(v bool) {
	o.SkipRegistrationVerification = &v
}

// GetSkipVerification returns the SkipVerification field value if set, zero value otherwise.
func (o *IambackofficeRegistrationRequest) GetSkipVerification() bool {
	if o == nil || IsNil(o.SkipVerification) {
		var ret bool
		return ret
	}
	return *o.SkipVerification
}

// GetSkipVerificationOk returns a tuple with the SkipVerification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IambackofficeRegistrationRequest) GetSkipVerificationOk() (*bool, bool) {
	if o == nil || IsNil(o.SkipVerification) {
		return nil, false
	}
	return o.SkipVerification, true
}

// HasSkipVerification returns a boolean if a field has been set.
func (o *IambackofficeRegistrationRequest) HasSkipVerification() bool {
	if o != nil && !IsNil(o.SkipVerification) {
		return true
	}

	return false
}

// SetSkipVerification gets a reference to the given bool and assigns it to the SkipVerification field.
func (o *IambackofficeRegistrationRequest) SetSkipVerification(v bool) {
	o.SkipVerification = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *IambackofficeRegistrationRequest) GetUser() IambackofficeUser {
	if o == nil || IsNil(o.User) {
		var ret IambackofficeUser
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IambackofficeRegistrationRequest) GetUserOk() (*IambackofficeUser, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *IambackofficeRegistrationRequest) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given IambackofficeUser and assigns it to the User field.
func (o *IambackofficeRegistrationRequest) SetUser(v IambackofficeUser) {
	o.User = &v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *IambackofficeRegistrationRequest) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IambackofficeRegistrationRequest) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *IambackofficeRegistrationRequest) HasTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *IambackofficeRegistrationRequest) SetTenantId(v string) {
	o.TenantId = &v
}

func (o IambackofficeRegistrationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IambackofficeRegistrationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Registration) {
		toSerialize["registration"] = o.Registration
	}
	if !IsNil(o.SendSetPasswordEmail) {
		toSerialize["sendSetPasswordEmail"] = o.SendSetPasswordEmail
	}
	if !IsNil(o.SkipRegistrationVerification) {
		toSerialize["skipRegistrationVerification"] = o.SkipRegistrationVerification
	}
	if !IsNil(o.SkipVerification) {
		toSerialize["skipVerification"] = o.SkipVerification
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	if !IsNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	return toSerialize, nil
}

type NullableIambackofficeRegistrationRequest struct {
	value *IambackofficeRegistrationRequest
	isSet bool
}

func (v NullableIambackofficeRegistrationRequest) Get() *IambackofficeRegistrationRequest {
	return v.value
}

func (v *NullableIambackofficeRegistrationRequest) Set(val *IambackofficeRegistrationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIambackofficeRegistrationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIambackofficeRegistrationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIambackofficeRegistrationRequest(val *IambackofficeRegistrationRequest) *NullableIambackofficeRegistrationRequest {
	return &NullableIambackofficeRegistrationRequest{value: val, isSet: true}
}

func (v NullableIambackofficeRegistrationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIambackofficeRegistrationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


